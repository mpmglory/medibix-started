<div class="well">
  {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

  {# Les erreurs générales du formulaire. #}
  {{ form_errors(form) }}

  {# Génération du label + error + widget pour un champ. #}
  {% if form.date is defined %}
    {{ form_row(form.date) }}
  {% endif %}

  <div class="form-group">
    {{ form_label(form.patient, "Nom du patient:", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(form.patient) }}
    <div class="col-sm-10">
        {{ form_widget(form.patient, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>

  <div class="form-group">
    {{ form_label(form.examens, "Examens:", {'label_attr': {'class': 'col-sm-2 control-label'}}) }}
    {{ form_errors(form.examens) }}
    <div class="col-sm-10">
      {{ form_widget(form.examens, {'attr': {'class': 'form-control'}}) }}
    </div>
  </div>
    
    {{ form_row(form.bers) }}
    <a href="#" id="add_ber" class="btn btn-default">Ajouter un BER</a>
    

  {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
  {{ form_widget(form.submit, {'attr': {'class': 'btn btn-primary btn-info'}}) }}

  {# Fermeture de la balise <form> du formulaire HTML #}
  {{ form_end(form) }}
</div>
    

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
   mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{# Voici le script en question : #}
<script type="text/javascript">
    
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('div#pmm_labobundle_bulletin_bers');
      
    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;
      
    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $('#add_ber').click(function(e) {
        
      addBer($container);
        
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        
      return false;
    });
      
    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
        
      addBer($container);
    } else {
      // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
      $container.children('div').each(function() {
          
        addDeleteLink($(this));
      });
    }
    // La fonction qui ajoute un formulaire CategoryType
    function addBer($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var template = $container.attr('data-prototype')
        .replace(/__name__label__/g, 'Examen=' +(index+1)+ ' - Resultat=')
        .replace(/__name__/g,        index)
      ;
      // On crée un objet jquery qui contient ce template
      var $prototype = $(template);
        
      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);
        
      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);
        
      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }
      
    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
        
      // Création du lien
      //var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');
        
      // Ajout du lien
      //$prototype.append($deleteLink);
      // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>